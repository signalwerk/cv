{"version":3,"sources":["LI.mdx","components/Markdown/index.tsx","components/List/index.js","components/Skillevel/index.js","components/Skills/index.js","components/Avatar/index.js","CV.mdx","components/Container/index.js","components/App/index.js","reportWebVitals.ts","index.tsx"],"names":["layoutProps","MDXContent","components","props","mdxType","parentName","className","isMDXComponent","obj2jsx","token","key","type","mdTypes","INLINE_CODE","value","EMPHASIS","children","map","item","index","STRONG","LINK","href","url","target","rel","TEXT","Markdown","text","tokens","fromMarkdown","ListRoot","ListItem","ListCol","column","noInner","List","data","trim","split","replace","line","indexLine","Skillevel","parts","style","width","parseInt","once","isVisible","Skills","Avatar","src","alt","showHeader","Container","version","Date","process","toLocaleDateString","year","month","day","App","fallback","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","rootElement","document","getElementById","hasChildNodes","hydrate","StrictMode","render","console","log"],"mappings":"grBASA,MAAMA,EAAc,GAIL,SAASC,GAAW,WACjCC,KACGC,IAEH,OAAO,YALS,UAKT,KAAeH,EAAiBG,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAC5E,sBAAM,oBACN,sBAAM,SACN,qBAAK,scAGL,qBAAK,wLACL,sBACE,kBAAIC,WAAW,MAAO,gCACtB,kBAAIA,WAAW,MAAO,gCACtB,kBAAIA,WAAW,MAAO,2CACtB,kBAAIA,WAAW,MAAO,uCAAiC,iBAAGA,WAAW,KACjE,KAAQ,oBACL,gCAAiC,KACxC,kBAAIA,WAAW,MAAO,6EAExB,qBAAK,4BACL,uBACA,qBAAK,cAAa,uBAAQ,KAC5B,kBAAIA,WAAW,KAAM,iBACnB,uBACA,uBACA,uBACA,mBAAKC,UAAU,SACb,qBAAK,2BAA0B,iBAAGD,WAAW,IACzC,KAAQ,gDACL,oBAAwB,iCAAgC,iBAAGA,WAAW,IACzE,KAAQ,oCACL,qBAAyB,OAMtCJ,EAAWM,gBAAiB,E,iCC3CtBC,EAAU,SAAVA,EAAWC,EAAgBC,GAC/B,OAAQD,EAAME,MACZ,KAAKC,UAAQC,YACX,OAAO,+BAAiBJ,EAAMK,OAAZJ,GACpB,KAAKE,UAAQG,SACX,OACE,6BACGN,EAAMO,SAASC,KAAI,SAACC,EAAMC,GAAP,OAAiBX,EAAQU,EAAMC,OAD5CT,GAIb,KAAKE,UAAQQ,OACX,OACE,sBAAMd,UAAU,QAAhB,SACGG,EAAMO,SAASC,KAAI,SAACC,EAAMC,GAAP,OAAiBX,EAAQU,EAAMC,OADxBT,GAIjC,KAAKE,UAAQS,KACX,OACE,mBAAaC,KAAMb,EAAMc,IAAKC,OAAO,SAASC,IAAI,aAAlD,gBACGhB,QADH,IACGA,OADH,EACGA,EAAOO,SAASC,KAAI,SAACC,EAAMC,GAAP,OAAiBX,EAAQU,EAAMC,OAD9CT,GAIZ,KAAKE,UAAQc,KACX,OACE,sBAAMpB,UAAU,iBAAhB,SACGG,EAAMK,OAD6BJ,GAI1C,QACE,OAAO,8DAYEiB,EARE,SAAC,GAA6B,IAA3BC,EAA0B,EAA1BA,KACZC,EAASC,IAAaF,GAC5B,OACE,sBAAMtB,UAAU,WAAhB,SACGuB,GAAUA,EAAOZ,KAAI,SAACR,EAAOU,GAAR,OAAkBX,EAAQC,EAAOU,SCzChDY,EAAW,SAAC,GAAD,IAAGzB,EAAH,EAAGA,UAAWU,EAAd,EAAcA,SAAd,OACtB,qBAAKV,UAAS,cAASA,EAAS,WAAOA,GAAc,IAArD,SACE,6BAAKU,OAIIgB,EAAW,SAAC,GAAD,IAAG1B,EAAH,EAAGA,UAAWU,EAAd,EAAcA,SAAd,OACtB,oBAAIV,UAAS,kBAAaA,EAAS,WAAOA,GAAc,IAAxD,SAA+DU,KAGpDiB,EAAU,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAQlB,EAAX,EAAWA,SAAX,IAAqBmB,eAArB,gBACrB,sBAAM7B,UAAS,oBAAe4B,GAA9B,SACGC,EACCnB,EAEA,sBAAMV,UAAS,oBAAe4B,EAAf,WAAf,SAAgDlB,OA4BvCoB,EAvBF,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACd,OACE,cAAC,EAAD,UACGA,EACEC,OACAC,MAAM,MAENtB,KAAI,SAACC,GAAD,OAAUA,EAAKsB,QAAQ,UAAW,OACtCvB,KAAI,SAACwB,EAAMC,GAAP,OACH,cAAC,EAAD,UACGD,EAAKF,MAAM,KAAKtB,KAAI,SAACC,EAAMC,GAC1B,OACE,cAAC,EAAD,CAASe,OAAQf,EAAjB,SACE,cAAC,EAAD,CAAUS,KAAMV,KADWC,OAHpBuB,S,gBCaVC,G,MAzCG,SAAC,GAAc,IAAZN,EAAW,EAAXA,KACnB,OACE,cAAC,EAAD,UACGA,EACEC,OACAC,MAAM,MACNtB,KAAI,SAACC,GAAD,OAAUA,EAAKsB,QAAQ,UAAW,OACtCvB,KAAI,SAACwB,EAAMC,GACV,IAAIE,EAAQH,EAAKF,MAAM,KAEvB,OACE,eAAC,EAAD,WACE,cAAC,EAAD,CAASL,OAAQ,EAAjB,SAAqBU,EAAM,KAC3B,cAAC,EAAD,CAASV,OAAQ,EAAjB,SACE,qBAAK5B,UAAU,mBAAf,SACE,qBACEA,UAAU,yBACVuC,MAAO,CACLC,MAAM,GAAD,OAAKC,SAASH,EAAM,IAApB,MAHT,SAME,cAAC,IAAD,CAAiBI,MAAM,EAAvB,SACG,gBAAGC,EAAH,EAAGA,UAAH,OACC,qBACE3C,UAAU,wBACVuC,MAAO,CACLC,MAAM,GAAD,OAAKG,EAAY,IAAM,EAAvB,mBAfNP,UCSZQ,G,MArBA,SAAC,GAAkB,IAAhBlC,EAAe,EAAfA,SAChB,OACE,gCACE,cAAC,EAAD,CAAUV,UAAU,SAApB,SACE,eAAC,EAAD,WACE,sBAAMA,UAAU,gBAAhB,SACE,sBAAMA,UAAU,gBAAhB,qBAEF,sBAAMA,UAAU,cAAhB,SACE,sBAAMA,UAAU,gBAAhB,4BAEF,sBAAMA,UAAU,mBAAhB,SACE,sBAAMA,UAAU,gBAAhB,6BAILU,OC2BQmC,G,MA3CA,SAAC,GAAD,EAAGnC,SAAH,OACb,qBAAKV,UAAU,SAAf,SACE,cAAC,EAAD,UACE,eAAC,EAAD,WACE,cAAC,EAAD,CAAS4B,OAAQ,EAAGC,SAAS,EAA7B,SACE,sBAAM7B,UAAU,eAAhB,SACE,mBACEgB,KAAK,gCACLhB,UAAU,6BACVkB,OAAO,SACPC,IAAI,sBAJN,SAME,qBACEnB,UAAU,cACV8C,IAAI,qDACJC,IAAI,uBAKZ,eAAC,EAAD,CAASnB,OAAQ,EAAGC,SAAS,EAA7B,UACE,qBACE7B,UAAU,cACV8C,IAAI,8EACJC,IAAI,iBAEN,uBAAM/C,UAAU,QAAhB,4BACkB,IAChB,mBACEgB,KAAK,yBACLE,OAAO,SACPC,IAAI,sBAHN,+BAMK,IARP,2B,+MClBV,MAAMzB,EAAc,GAIL,SAASC,GAAW,WACjCC,KACGC,IAEH,OAAO,YALS,UAKT,KAAeH,EAAiBG,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAE5E,sBAAM,oBACN,YAAC,EAAD,CAAMiC,KAAO,4sBAYdjC,QAAQ,SACP,uBACA,YAAC,EAAD,CAAQA,QAAQ,WAChB,sBAAM,2BACN,YAAC,EAAD,CAAMiC,KAAO,w8BAQdjC,QAAQ,SACP,sBAAM,YACN,YAAC,EAAD,CAAMiC,KAAO,yvBAMdjC,QAAQ,SACP,sBAAM,UACN,YAAC,EAAD,CAAMiC,KAAO,sbAIdjC,QAAQ,SACP,sBAAM,eACN,sBAAM,iBACN,sBACE,kBAAIC,WAAW,MAAO,gDACtB,kBAAIA,WAAW,MAAO,+BACtB,kBAAIA,WAAW,MAAO,uCACtB,kBAAIA,WAAW,MAAO,mCAExB,sBAAM,YACN,sBACE,kBAAIA,WAAW,MAAO,kDACtB,kBAAIA,WAAW,MAAO,+BACtB,kBAAIA,WAAW,MAAO,kDAExB,sBAAM,aACN,YAAC,EAAD,CAAQD,QAAQ,UACd,sBAAM,yBACN,YAAC,EAAD,CAAWkD,YAAY,EAAMjB,KAAO,qLAQvCjC,QAAQ,cACL,YAAC,EAAD,CAAMiC,KAAO,+CAEhBjC,QAAQ,SACL,sBAAM,cACN,YAAC,EAAD,CAAWiC,KAAO,gFAIrBjC,QAAQ,cACL,YAAC,EAAD,CAAMiC,KAAO,8HAGhBjC,QAAQ,SACL,sBAAM,WACN,YAAC,EAAD,CAAWiC,KAAO,wEAIrBjC,QAAQ,cACL,sBAAM,kBACN,YAAC,EAAD,CAAWiC,KAAO,uEAIrBjC,QAAQ,cACL,sBAAM,2BACN,YAAC,EAAD,CAAWiC,KAAO,iDAGrBjC,QAAQ,cACL,YAAC,EAAD,CAAMiC,KAAO,2DAEhBjC,QAAQ,SACL,sBAAM,SACN,YAAC,EAAD,CAAWiC,KAAO,oHAKrBjC,QAAQ,cACL,sBAAM,YACN,YAAC,EAAD,CAAWiC,KAAO,0FAGrBjC,QAAQ,cACL,sBAAM,gBACN,YAAC,EAAD,CAAWiC,KAAO,0JAMrBjC,QAAQ,cACL,sBAAM,0BACN,YAAC,EAAD,CAAWiC,KAAO,4KAOrBjC,QAAQ,cACL,sBAAM,qDACN,YAAC,EAAD,CAAWiC,KAAO,yBAErBjC,QAAQ,eAEP,sBAAM,cACN,sBAAM,uBACN,YAAC,EAAD,CAAMiC,KAAO,uVAMdjC,QAAQ,SACP,sBAAM,6BACN,YAAC,EAAD,CAAMiC,KAAO,2PAMdjC,QAAQ,SACP,sBAAM,YACN,YAAC,EAAD,CAAMiC,KAAO,0IAGdjC,QAAQ,SACP,sBAAM,mBACN,YAAC,EAAD,CAAMiC,KAAO,2FAGdjC,QAAQ,SACP,sBAAM,aACN,YAAC,EAAD,CAAMiC,KAAO,yJAKdjC,QAAQ,SACP,sBAAM,yBACN,YAAC,EAAD,CAAMiC,KAAO,4IAGdjC,QAAQ,SACP,sBAAM,SACN,YAAC,EAAD,CAAMiC,KAAO,0+CAcdjC,QAAQ,SACP,sBAAM,gBACN,YAAC,EAAD,CAAMiC,KAAO,w4BASdjC,QAAQ,SACP,sBAAM,aACN,YAAC,EAAD,CAAMiC,KAAO,kjBAMdjC,QAAQ,SACP,sBAAM,kBAAiB,yBAAS,kCAChC,YAAC,EAAD,CAAMiC,KAAO,shBAKdjC,QAAQ,SACP,sBAAM,cACN,YAAC,EAAD,CAAMiC,KAAO,0IAEdjC,QAAQ,SACP,sBAAM,gBACN,YAAC,EAAD,CAAMiC,KAAO,gfAOdjC,QAAQ,SACP,sBAAM,SACN,YAAC,EAAD,CAAMiC,KAAO,8HAGdjC,QAAQ,SACP,sBAAM,sBACN,YAAC,EAAD,CAAMiC,KAAO,oKAGdjC,QAAQ,SACP,sBAAM,6BACN,YAAC,EAAD,CAAMiC,KAAO,wzBAcdjC,QAAQ,UAKXH,EAAWM,gBAAiB,E,UClRbgD,EAFG,SAAC,GAAD,IAAGvC,EAAH,EAAGA,SAAH,OAAkB,qBAAKV,UAAU,YAAf,SAA4BU,KCsB1DwC,G,4DAAU,IAAIC,KAClBC,cACAC,mBAAmB,QARL,CACdC,KAAM,UACNC,MAAO,OACPC,IAAK,aAwBQC,E,4JAhBb,WACE,OACE,eAAC,EAAD,WACE,8DAA8B,OAA9B,WACA,kDAAkBP,KAClB,cAAC,WAAD,CAAUQ,SAAU,qEAApB,SACE,cAAC,EAAD,MAEF,cAAC,WAAD,CAAUA,SAAU,qEAApB,SACE,cAAC,EAAD,a,GAVQC,aCfHC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCJRQ,EAAcC,SAASC,eAAe,SAE5C,OAAIF,QAAJ,IAAIA,OAAJ,EAAIA,EAAaG,iBACfC,kBACE,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFL,GAEOA,GACTM,iBACE,cAAC,IAAMD,WAAP,UACE,cAAC,EAAD,MAEFL,GAOJT,EAAgBgB,QAAQC,O","file":"static/js/main.aa34f971.chunk.js","sourcesContent":["\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\n\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h2>{`Letter of Intent`}</h2>\n    <h3>{`Hello`}</h3>\n    <p>{`In the last century I started an education in graphic design. During the last two decade I gradually changed from design to full stack web development.\nI feel passionate about programming and during the last couple years I focused mainly on JavaScript.\nSearching for a new challenge in my work is a goal for the next years and I strive for a setting where it is possible to learn from experienced developers and where large projects are dealt with.`}</p>\n    <p>{`I would love to switch gears and work in a new company, if the job fulfills the gaps I am missing in my current position. The following points for a new occupation should be given:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Challenging work environment`}</li>\n      <li parentName=\"ul\">{`Time is given to write tests`}</li>\n      <li parentName=\"ul\">{`CI/CD environment (GIT version control)`}</li>\n      <li parentName=\"ul\">{`60 % part time (I teach at the `}<a parentName=\"li\" {...{\n          \"href\": \"https://sfgz.ch/\"\n        }}>{`School of Design · Zurich`}</a>{`)`}</li>\n      <li parentName=\"ul\">{`minimal CHF 120 000.– annual salary (for full-time equivalent)`}</li>\n    </ul>\n    <p>{`Feel free to contact me.`}</p>\n    <br />\n    <p>{`Sincerely, `}<br />{`\n`}<em parentName=\"p\">{`Stefan Huber`}</em></p>\n    <br />\n    <br />\n    <hr />\n    <div className=\"small\">\n      <p>{`This page was made with `}<a parentName=\"p\" {...{\n          \"href\": \"https://github.com/facebook/create-react-app\"\n        }}>{`Create React App`}</a>{`. You can grab the code in my `}<a parentName=\"p\" {...{\n          \"href\": \"https://github.com/signalwerk/cv\"\n        }}>{`GitHub repository`}</a>{`.`}</p>\n    </div>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;","import React from \"react\";\n\nimport fromMarkdown, { mdTypes, mdToken } from \"mdast-util-from-span-markdown\";\n\nexport type markdownProps = {\n  text: string;\n};\n\nconst obj2jsx = (token: mdToken, key: number) => {\n  switch (token.type) {\n    case mdTypes.INLINE_CODE:\n      return <code key={key}>{token.value}</code>;\n    case mdTypes.EMPHASIS:\n      return (\n        <em key={key}>\n          {token.children.map((item, index) => obj2jsx(item, index))}\n        </em>\n      );\n    case mdTypes.STRONG:\n      return (\n        <span className=\"small\" key={key}>\n          {token.children.map((item, index) => obj2jsx(item, index))}\n        </span>\n      );\n    case mdTypes.LINK:\n      return (\n        <a key={key} href={token.url} target=\"_blank\" rel=\"noreferrer\">\n          {token?.children.map((item, index) => obj2jsx(item, index))}\n        </a>\n      );\n    case mdTypes.TEXT:\n      return (\n        <span className=\"markdown__text\" key={key}>\n          {token.value}\n        </span>\n      );\n    default:\n      return <span>⚠️ no handling</span>;\n  }\n};\n\nconst Markdown = ({ text }: markdownProps) => {\n  const tokens = fromMarkdown(text);\n  return (\n    <span className=\"markdown\">\n      {tokens && tokens.map((token, index) => obj2jsx(token, index))}\n    </span>\n  );\n};\nexport default Markdown;\n","import React from \"react\";\nimport \"./styles.css\";\nimport Markdown from \"../Markdown/\";\n\nexport const ListRoot = ({ className, children }) => (\n  <div className={`list${className ? ` ${className}` : \"\"}`}>\n    <ul>{children}</ul>\n  </div>\n);\n\nexport const ListItem = ({ className, children }) => (\n  <li className={`list--li${className ? ` ${className}` : \"\"}`}>{children}</li>\n);\n\nexport const ListCol = ({ column, children, noInner = false }) => (\n  <span className={`list--col_${column}`}>\n    {noInner ? (\n      children\n    ) : (\n      <span className={`list--col_${column}--inner`}>{children}</span>\n    )}\n  </span>\n);\n\nconst List = ({ data }) => {\n  return (\n    <ListRoot>\n      {data\n        .trim()\n        .split(\"\\n\")\n        // remove asterisk (*) at the beginning of the line\n        .map((item) => item.replace(/^\\*[ ]*/, \"\"))\n        .map((line, indexLine) => (\n          <ListItem key={indexLine}>\n            {line.split(\"|\").map((item, index) => {\n              return (\n                <ListCol column={index} key={index}>\n                  <Markdown text={item} />\n                </ListCol>\n              );\n            })}\n          </ListItem>\n        ))}\n    </ListRoot>\n  );\n};\n\nexport default List;\n","import React from \"react\";\nimport { ListRoot, ListItem, ListCol } from \"../List\";\nimport TrackVisibility from \"react-on-screen\";\nimport \"./styles.css\";\n\nconst Skillevel = ({ data }) => {\n  return (\n    <ListRoot>\n      {data\n        .trim()\n        .split(\"\\n\")\n        .map((item) => item.replace(/^\\*[ ]*/, \"\"))\n        .map((line, indexLine) => {\n          let parts = line.split(\"|\");\n\n          return (\n            <ListItem key={indexLine}>\n              <ListCol column={0}>{parts[1]}</ListCol>\n              <ListCol column={1}>\n                <div className=\"skillevel__level\">\n                  <div\n                    className=\"skillevel__level-inner\"\n                    style={{\n                      width: `${parseInt(parts[0])}%`,\n                    }}\n                  >\n                    <TrackVisibility once={true}>\n                      {({ isVisible }) => (\n                        <div\n                          className=\"skillevel__level-fill\"\n                          style={{\n                            width: `${isVisible ? 100 : 0}%`,\n                          }}\n                        />\n                      )}\n                    </TrackVisibility>\n                  </div>\n                </div>\n              </ListCol>\n            </ListItem>\n          );\n        })}\n    </ListRoot>\n  );\n};\n\nexport default Skillevel;\n","import React from \"react\";\nimport { ListRoot, ListItem } from \"../List\";\nimport \"./styles.css\";\n\nconst Skills = ({ children }) => {\n  return (\n    <div>\n      <ListRoot className=\"skills\">\n        <ListItem>\n          <span className=\"skills--basic\">\n            <span className=\"skills--label\">Basic</span>\n          </span>\n          <span className=\"skills--pro\">\n            <span className=\"skills--label\">Professional</span>\n          </span>\n          <span className=\"skills--advanced\">\n            <span className=\"skills--label\">Advanced</span>\n          </span>\n        </ListItem>\n      </ListRoot>\n      {children}\n    </div>\n  );\n};\n\nexport default Skills;\n","import React from \"react\";\nimport { ListRoot, ListItem, ListCol } from \"../List\";\nimport \"./styles.css\";\n\nconst Avatar = ({ children }) => (\n  <div className=\"avatar\">\n    <ListRoot>\n      <ListItem>\n        <ListCol column={0} noInner={true}>\n          <span className=\"avatar--icon\">\n            <a\n              href=\"https://avatar.signalwerk.ch/\"\n              className=\"avatar--link print-no-href\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              <img\n                className=\"avatar--img\"\n                src=\"https://avatar.signalwerk.ch/latest/signalwerk.svg\"\n                alt=\"Stefan Huber\"\n              />\n            </a>\n          </span>\n        </ListCol>\n        <ListCol column={1} noInner={true}>\n          <img\n            className=\"avatar--img\"\n            src=\"https://portrait.signalwerk.ch/illustration/2020/rgb/w2000/stefan-huber.jpg\"\n            alt=\"Stefan Huber\"\n          />\n          <span className=\"small\">\n            Illustration by{\" \"}\n            <a\n              href=\"http://www.guedel.biz/\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              Benjamin Güdel\n            </a>{\" \"}\n            · 2020\n          </span>\n        </ListCol>\n      </ListItem>\n    </ListRoot>\n  </div>\n);\n\nexport default Avatar;\n","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport Skillevel from \"./components/Skillevel\";\nimport Skills from \"./components/Skills\";\nimport List from \"./components/List\";\nimport Avatar from \"./components/Avatar\";\n\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h2>{`Personal Details`}</h2>\n    <List data={`\n* Name                   |     Stefan Huber\n* Mail                   |     sh@signalwerk.ch\n* Mobile                 |     +41 78 744 37 38\n* Current residence      |     Zurich **· Switzerland**\n* Year of birth          |     1981\n* Nationality            |     Swiss\n* Religion               |     Atheist **· and laughing about it**\n* Marital status         |     Single\n* Cyborg extensions      |     Glasses\n* COVID-19               |     fully vaccinated and boosted **· 3 × BioNTech**\n* Social Media           |     [Twitter](https://twitter.com/sgnlwrk) · [Instagram](https://www.instagram.com/signalwerk/) · [GitHub](https://github.com/signalwerk)\n`} mdxType=\"List\" />\n    <hr />\n    <Avatar mdxType=\"Avatar\" />\n    <h2>{`Professional Experience`}</h2>\n    <List data={`\n* 2019 – now          | *Developer* **· Liip · Zurich – Switzerland**\n* 2006 – now          | *Developer* **· Self Employed · Zurich – Switzerland**\n* 2017 – 2021         | Head of *College Higher Education · Interaction Design* **· School of Design (SfGZ) · Zurich – Switzerland**\n* 2007 – 2008         | *Assistant* **· Zurich University of the Arts (ZHdK) · Department of Design · Zurich – Switzerland**\n* 2003 – 2005         | *Typesetter & Head of Information Technology* **· Team hp Schneider · Winterthur – Switzerland**\n* 2002                | *Typesetter & Graphic Designer* **· ropress · Zurich – Switzerland**\n* 2001 – 2002         | *Typesetter & Graphic Designer* **· gdz AG · Zurich – Switzerland**\n`} mdxType=\"List\" />\n    <h2>{`Teaching`}</h2>\n    <List data={`\n* 2019 – now          | *Web-Technology for Interaction Designer* **· School of Design (SfGZ) · Zurich – Switzerland**\n* 2014 – 2015         | *Web-Technology for Designer* **· School of Design (SfGZ) · Zurich – Switzerland**\n* 2008                | *Technical Training for Designer* **· University of Applied Sciences and Arts · Lucerne – Switzerland**\n* 2007 – 2008         | *Technical Training for Typesetter* **· School of Design (SfGZ) · Zurich – Switzerland**\n* 2005 – 2006         | *Technical Training for Graphic Designer* **· School of Design (SfGZ) · Zurich – Switzerland**\n`} mdxType=\"List\" />\n    <h2>{`Degree`}</h2>\n    <List data={`\n* 2006 – 2008         | *CAS Type Design* **· Zurich University of the Arts (ZHdK) · Department of Design · Zurich – Switzerland**\n* 2002 – 2004         | *Typographic Designer* **· School of Design (SfGZ) · Zurich – Switzerland**\n* 1997 – 2001         | *Polygraf* **· School of Design (SfGZ) · Zurich – Switzerland**\n`} mdxType=\"List\" />\n    <h2>{`Open Source`}</h2>\n    <h3>{`Contributions`}</h3>\n    <ul>\n      <li parentName=\"ul\">{`Code-Contributions in 70+ Projects on GitHub`}</li>\n      <li parentName=\"ul\">{`100+ public Repos on GitHub`}</li>\n      <li parentName=\"ul\">{`Wikipedia Germany (official editor)`}</li>\n      <li parentName=\"ul\">{`Adobe Translation Center (ATC)`}</li>\n    </ul>\n    <h3>{`Meetings`}</h3>\n    <ul>\n      <li parentName=\"ul\">{`Attended over 50 meetups related to technology`}</li>\n      <li parentName=\"ul\">{`Organizer of public meetups`}</li>\n      <li parentName=\"ul\">{`Attended many contribution days and hackatons`}</li>\n    </ul>\n    <h2>{`Skill Set`}</h2>\n    <Skills mdxType=\"Skills\">\n      <h3>{`Programming Languages`}</h3>\n      <Skillevel showHeader={true} data={`\n* 95       |   JavaScript\n* 70       |   TypeScript\n* 40       |   Python\n* 30       |   PHP\n* 30       |   C & C++\n* 35       |   Java\n* 40       |   Shell/Bash Script\n`} mdxType=\"Skillevel\" />\n      <List data={`\n* Used in the past      | Ruby · XSLT\n`} mdxType=\"List\" />\n      <h3>{`Frameworks`}</h3>\n      <Skillevel data={`\n* 90       |   react.js\n* 80       |   vue.js\n* 70       |   express.js\n`} mdxType=\"Skillevel\" />\n      <List data={`\n* others                | processing.org · Paper.js\n* Used in the past      | jQuery · backbone.js · ember.js\n`} mdxType=\"List\" />\n      <h3>{`Testing`}</h3>\n      <Skillevel data={`\n* 70       |   Jest\n* 60       |   Mocha\n* 60       |   Jasmine\n`} mdxType=\"Skillevel\" />\n      <h3>{`CSS Processors`}</h3>\n      <Skillevel data={`\n* 90       |   PostCSS\n* 85       |   SCSS\n* 70       |   LESS\n`} mdxType=\"Skillevel\" />\n      <h3>{`Build & package manager`}</h3>\n      <Skillevel data={`\n* 95       |   npm\n* 85       |   webpack\n`} mdxType=\"Skillevel\" />\n      <List data={`\n* Used in the past      | Grunt · gulp · Bower\n`} mdxType=\"List\" />\n      <h3>{`CI/CD`}</h3>\n      <Skillevel data={`\n* 85       |   Drone CI\n* 80       |   GitHub Actions\n* 70       |   Travis CI\n* 70       |   GitLab CI/CD\n`} mdxType=\"Skillevel\" />\n      <h3>{`Database`}</h3>\n      <Skillevel data={`\n* 80       |   Relational database (SQL)\n* 65       |   Document-oriented database\n`} mdxType=\"Skillevel\" />\n      <h3>{`Good to know`}</h3>\n      <Skillevel data={`\n* 85       |   GIT/gitflow\n* 90       |   RegEx\n* 45       |   Linux/BSD Admin\n* 70       |   Docker & Docker Compose\n* 25       |   Kubernetes\n`} mdxType=\"Skillevel\" />\n      <h3>{`Working with Designers`}</h3>\n      <Skillevel data={`\n* 50       |   Figma\n* 65       |   Sketch\n* 35       |   Adobe XD\n* 70       |   Adobe Photoshop\n* 90       |   Adobe InDesign\n* 85       |   Adobe Illustrator\n`} mdxType=\"Skillevel\" />\n      <h3>{`Bar charts are not a good idea for skills in a CV`}</h3>\n      <Skillevel data={`\n* 90       |   Yes\n`} mdxType=\"Skillevel\" />\n    </Skills>\n    <h2>{`Experience`}</h2>\n    <h3>{`Paradigm & Platform`}</h3>\n    <List data={`\n* 1998 – now         | Procedural programming\n* 2000 – now         | Declarative programming\n* 2005 – now         | Object-oriented programming (OOP)\n* 2010 – now         | Hardware programming (Microcontroller)\n* 2017 – now         | Functional programming\n`} mdxType=\"List\" />\n    <h3>{`Frameworks & Datafetching`}</h3>\n    <List data={`\n* 2019 – now           | vue.js\n* 2016 – now           | GraphQL\n* 2015 – now           | react.js\n* 2011 – 2014          | ember.js\n* 2010 – now           | RESTful\n`} mdxType=\"List\" />\n    <h3>{`Database`}</h3>\n    <List data={`\n* 2012 – now         | Document-oriented databases\n* 2006 – 2010        | Relational Databases (SQL)\n`} mdxType=\"List\" />\n    <h3>{`Version Control`}</h3>\n    <List data={`\n* 2010 – now         | GIT\n* 2006 – 2010        | SVN\n`} mdxType=\"List\" />\n    <h2>{`Languages`}</h2>\n    <List data={`\n* German     | Native\n* English    | Fluent **· CEFR C2**\n* French     | Intermediate **· CEFR B1**\n* Spanish    | Basic **· CEFR A2**\n`} mdxType=\"List\" />\n    <h2>{`Language Certificates`}</h2>\n    <List data={`\n* 2008     | Cambridge Certificate of Advanced English **· CAE**\n* 2006     | Cambridge First Certificate in English **· FCE**\n`} mdxType=\"List\" />\n    <h2>{`Talks`}</h2>\n    <List data={`\n* 2019                | *Liberate books*  **· Libre Graphics Meeting · Saarbrücken – Germany**\n* 2019                | *State of the Font*  **· School of Design (SfGZ) · Zurich – Switzerland**\n* 2018                | *Git & GitHub*  **· Meetup · Zurich – Switzerland**\n* 2018                | *React.js*  **· Meetup · Zurich – Switzerland**\n* 2018                | *ramdajs*  **· Meetup · Zurich – Switzerland**\n* 2018                | *paper.js*  **· Meetup · Zurich – Switzerland**\n* 2018                | *Travis CI*  **· Meetup · Zurich – Switzerland**\n* 2018                | *New Fonts! – New language?*  **· Literature Days · Zofingen – Switzerland**\n* 2018                | *Generative Design shared in an URL*  **· Libre Graphics Meeting · Sevilla – Spain**\n* 2017                | *Abstraction in design – from hand to code*  **· ZeTeCo · Schaffhausen – Switzerland**\n* 2014                | *Responsive design – who adapts to whom?*  **· Meeting Point Publishing · Zurich – Switzerland**\n* 2011                | *Caminantes Grafico* **· Hyperwerk Institute of Postindustrial Design · Basel – Switzerland**\n* 2010                | *New Fonts! Only why?* **· Day of Font · Zurich – Switzerland**\n`} mdxType=\"List\" />\n    <h2>{`Publications`}</h2>\n    <List data={`\n* 2020                | *Flexbox – aligning elements on the web*  **· Publisher 3/2020 · Switzerland**\n* 2020                | *Units of measurement on the web – relative or absolute*  **· Publisher 2/2020 · Switzerland**\n* 2020                | *Colours on the Web – distinguish and interpolate*  **· Publisher 1/2020 · Switzerland**\n* 2019                | *Spaces – Microtypography for the Web*  **· Publisher 5/2019 · Switzerland**\n* 2019                | *Design Systems for the Web*  **· Publisher 4/2019 · Switzerland**\n* 2019                | *Frontend-Frameworks – Websites today*  **· Publisher 3/2019 · Switzerland**\n* 2014                | *Format a lifetime*  **· M0ire 2 · 2014 · Chicago/Switzerland**\n* 2013                | *How likely is the chance?*  **· M0ire 1 · 2013 · Chicago/Switzerland**\n`} mdxType=\"List\" />\n    <h2>{`Volunteer`}</h2>\n    <List data={`\n* 2018 – now          | *Election worker* elected by city council **· Zurich**\n* 2013 – 2021         | *Auditor* · FabLab **· Zurich**\n* 2013 – 2015         | *Board member* · Verein für die Schwarze Kunst e.V. **· Dresden – Germany**\n* 2008 – 2013         | *Board assistant* · Grafisches Forum Zürich **· Zurich – Switzerland**\n* 1999 – 2008         | *Board member* · Youth Commission comedia **· Switzerland**\n`} mdxType=\"List\" />\n    <h2>{`Social service `}<small>{`· mandatory in Switzerland`}</small></h2>\n    <List data={`\n* 2010 · 2 Month                | *Community worker* **· Christuszentrum · Zurich – Switzerland**\n* 2009 · 3 Month                | *Community worker* **· Christuszentrum · Zurich – Switzerland**\n* 2008 · 3 Month                | *Driver for disabled and elderly people* **· TIXI · Zurich – Switzerland**\n* 2002 · 4 Month                | *Archivist* **· Swiss National Museum Zurich, Graphic Collection · Zurich – Switzerland**\n`} mdxType=\"List\" />\n    <h2>{`Internship`}</h2>\n    <List data={`\n* 2009 · 6 Month         | *Typesetting with movable types* **· Offizin Haag Drugulin · Leipzig – Germany**\n`} mdxType=\"List\" />\n    <h2>{`Stays abroad`}</h2>\n    <List data={`\n* 2017 · 1 Month     | *Sabbatical* **· Ljubljana – Slovenia**\n* 2012 · 4 Month     | *Sabbatical* **· New York – USA**\n* 2011 · 3 Month     | *Sabbatical* **· Various places – USA**\n* 2008 · 3 Month     | *English School* **· Sydney – Australia**\n* 2006 · 3 Month     | *English School* **· London – UK**\n* 2006 · 2 Month     | *Spanish School* **· Valencia – Spain**\n`} mdxType=\"List\" />\n    <h2>{`Sport`}</h2>\n    <List data={`\n* 2010 – now    | 5 – 7 km swimming per week\n* 1990 – 2000    | Judo\n`} mdxType=\"List\" />\n    <h2>{`Other Certificates`}</h2>\n    <List data={`\n* Driving License | Swiss driving licenses **· A1, B, D1 (3,5t;106), BE, D1E**\n* Publishing      | PDFX-ready · Creator Certified Expert **· 2005**\n`} mdxType=\"List\" />\n    <h2>{`Personal Internet History`}</h2>\n    <List data={`\n* ~1997           | Mail-Address\n* 1999            | ebay Account\n* 2004            | PayPal Account\n* ~2005           | Podcast Listener\n* 2008            | Editor-Status for [de.wikipedia.org](https://de.wikipedia.org/)\n* 2011            | [Twitter Account](https://twitter.com/sgnlwrk) **· User 318 188 188**\n* 2011            | [GitHub Account](https://github.com/signalwerk) **· User 992 878**\n* 2012            | [Spotify Premium](https://open.spotify.com/user/signalwerk)\n* 2016            | TikTok Account (musical.ly)\n* 2019            | Adoption of a character of «The Unicode Consortium» **· U+2766 ❦ FLORAL HEART**\n* 2019            | Beta-Tester GitHub Actions\n* 2020            | Beta-Tester GitHub Codespaces\n* 2021            | Beta-Tester GitHub Copilot\n`} mdxType=\"List\" />\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;","import React from \"react\";\nimport \"./styles.css\";\n\nconst Container = ({ children }) => <div className=\"container\">{children}</div>;\n\nexport default Container;\n","import React, { Component, Suspense } from \"react\";\n\n/* eslint-disable import/no-webpack-loader-syntax */\nimport LI from \"!babel-loader!@mdx-js/loader!../../LI.mdx\";\nimport CV from \"!babel-loader!@mdx-js/loader!../../CV.mdx\";\n\nimport Container from \"../Container\";\n\nimport \"./css/fonts.css\";\nimport \"./css/_root.css\";\nimport \"./css/a.css\";\nimport \"./css/code.css\";\nimport \"./css/em.css\";\nimport \"./css/heading.css\";\nimport \"./css/list.css\";\nimport \"./css/p.css\";\nimport \"./css/small.css\";\nimport \"./css/hr.css\";\n\nconst options = {\n  year: \"numeric\",\n  month: \"long\",\n  day: \"numeric\",\n};\n\nconst version = new Date(\n  process.env.REACT_APP_BUILD_TIME * 1000\n).toLocaleDateString(\"en-US\", options);\n\nclass App extends Component {\n  render() {\n    return (\n      <Container>\n        <h1>Stefan Huber · Curriculum{\"\\u00A0\"}Vitae</h1>\n        <small>Updated · {version}</small>\n        <Suspense fallback={<div>Loading – Curriculum Vitae...</div>}>\n          <CV />\n        </Suspense>\n        <Suspense fallback={<div>Loading – Letter of Intent...</div>}>\n          <LI />\n        </Suspense>\n      </Container>\n    );\n  }\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport { hydrate, render } from \"react-dom\";\nimport App from \"./components/App/\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nconst rootElement = document.getElementById(\"root\");\n\nif (rootElement?.hasChildNodes()) {\n  hydrate(\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>,\n    rootElement\n  );\n} else if (rootElement) {\n  render(\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>,\n    rootElement\n  );\n}\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals(console.log);\n"],"sourceRoot":""}